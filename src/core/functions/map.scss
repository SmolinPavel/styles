@function map-flatten($map, $delimiter: '-', $recursive: true, $prefix: '') {
  $result: ();

  @each $name, $value in $map {
    @if ($recursive and type-of($value) == 'map') {
      $result: map-merge($result, map-flatten($value, $delimiter: $delimiter, $prefix: '#{$name}'));
    } @else {
      $result: map-merge($result, (
        #{$prefix}#{$delimiter}#{$name}: #{$value}
      ));
    }
  }

  @return $result;
}

@function map-prefix-keys($map, $prefix: '-', $recursive: true) {
  $result: ();

  @each $name, $value in $map {
    @if ($recursive and type-of($value) == 'map') {
      $result: map-merge($result, map-prefix-keys($value, $delimiter: $delimiter, $prefix: '#{$name}'));
    } @else {
      $result: map-merge($result, (
        #{$prefix}#{$name}: #{$value}
      ));
    }
  }

  @return $result;
}

@function map-next($map, $name) {
  $keys: map-keys($map);
  $n: index($keys, $name);
  @return if($n < length($keys), nth($keys, $n + 1), null);
}

@function map-min($map, $name) {
  $min: map-get($map, $name);
  @return if($min != 0, $min, null);
}

@function map-max($map, $name, $delta: .02px) {
  $next: map-next($map, $name);
  @return if($next, map-min($map, $next) - $delta, null);
}

@function map-infix($map, $name) {
  @return if(map-min($map, $name) == null, '', '#{$name}-');
}
