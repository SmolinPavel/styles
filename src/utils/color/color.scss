/// text is deprecated, use color instead

@each $name, $value in $context-colors {
  .#{$namespace}u-text#{string-capitalize($name)} {
    color: $value;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include screen-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @each $name, $value in $context-colors {
      .#{$namespace}u-#{$infix}text#{string-capitalize($name)} {
        color: $value;
      }
    }
  }
}

@each $name, $value in $grays {
  .#{$namespace}u-textGray#{string-capitalize($name)} {
    color: $value;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include screen-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @each $name, $value in $grays {
      .#{$namespace}u-#{$infix}textGray#{string-capitalize($name)} {
        color: $value;
      }
    }
  }
}

/// color variant

@each $name, $value in $context-colors {
  .#{$namespace}u-color#{string-capitalize($name)} {
    color: $value;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include screen-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @each $name, $value in $context-colors {
      .#{$namespace}u-#{$infix}color#{string-capitalize($name)} {
        color: $value;
      }
    }
  }
}

@each $name, $value in $grays {
  .#{$namespace}u-colorGray#{string-capitalize($name)} {
    color: $value;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include screen-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @each $name, $value in $grays {
      .#{$namespace}u-#{$infix}colorGray#{string-capitalize($name)} {
        color: $value;
      }
    }
  }
}